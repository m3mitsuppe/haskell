{-
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms. 
-}

fib :: Int -> Int
fib 1 = 1
fib 2 = 2
fib n = fib (n-1) + fib (n-2)

fibs x = map fib [1..x]

-- sumEvenFibs max = sum [fib x | x <- [1..], fib x < max, even (fib x)]

sumEvenFibs maxi = sum [fib x | x <- takeWhile check [1..], even (fib x)] where
= fib x < maxi

check2 :: Int -> Int -> Bool
check2 x maxi = fib x < maxi && even (fib x)